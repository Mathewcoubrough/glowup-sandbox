run: |
         set -e
         test -f package.json || echo '{ "name":"glowup","version":"1.0.0","private":true }' > package.json
          test -f capacitor.config.json || cat > capacitor.config.json <<'EOF'
          { "appId": "com.mathe.glowup", "appName": "GlowUp Money", "webDir": "web", "bundledWebRuntime": false }
          test -f capacitor.config.json || cat > capacitor.config.json <<EOF
          { "appId": "${{ secrets.APP_BUNDLE_ID }}", "appName": "GlowUp Money", "webDir": "web", "bundledWebRuntime": false }
         EOF
         mkdir -p web
         test -f web/index.html || echo '<!doctype html><title>GlowUp</title><body>Build</body>' > web/index.html
@@ -72,6 +72,8 @@ jobs:
         security create-keychain -p "$PASS" "$KEYCHAIN"
         security set-keychain-settings -lut 21600 "$KEYCHAIN"
         security unlock-keychain -p "$PASS" "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"
          security set-key-partition-list -S apple-tool:,apple: -s -k "$PASS" "$KEYCHAIN"
         security import signing.p12 -k "$KEYCHAIN" -P "$IOS_CERT_PASSWORD" -T /usr/bin/codesign -T /usr/bin/security
         security list-keychains -d user -s "$KEYCHAIN" login.keychain-db
         security find-identity -v -p codesigning "$KEYCHAIN" || true
@@ -81,9 +83,10 @@ jobs:
         cp profile.mobileprovision "$PROFILE_PATH"

         UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< "$(security cms -D -i "$PROFILE_PATH")")
          NAME=$(/usr/libexec/PlistBuddy -c 'Print :Name' /dev/stdin <<< "$(security cms -D -i "$PROFILE_PATH")")
          NAME=$(/usr/libexec/PlistBuddy -c 'Print :Name'  /dev/stdin <<< "$(security cms -D -i "$PROFILE_PATH")")
         echo "PROFILE_UUID=$UUID" >> $GITHUB_ENV
          echo "PROFILE_NAME=$NAME" >> $GITHUB_ENV
          echo "PROFILE_NAME=$NAME"  >> $GITHUB_ENV
          echo "Using provisioning profile: $NAME ($UUID)"

     - name: Set build number
env:
@@ -93,52 +96,36 @@ jobs:

     - name: Archive (Release)
env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}
          TEAM_ID:         ${{ secrets.TEAM_ID }}
          APP_BUNDLE_ID:   ${{ secrets.APP_BUNDLE_ID }}
run: |
         set -e
          FLAGS="DEVELOPMENT_TEAM=$TEAM_ID PRODUCT_BUNDLE_IDENTIFIER=$APP_BUNDLE_ID CODE_SIGN_STYLE=Manual PROVISIONING_PROFILE_SPECIFIER=$PROFILE_NAME PROVISIONING_PROFILE=$PROFILE_UUID"
         if [ -f "ios/App/App.xcworkspace" ]; then
            xcodebuild -workspace ios/App/App.xcworkspace \
              -scheme App -configuration Release \
              -destination 'generic/platform=iOS' \
              DEVELOPMENT_TEAM="$TEAM_ID" \
              PRODUCT_BUNDLE_IDENTIFIER="$APP_BUNDLE_ID" \
              CODE_SIGN_STYLE=Manual \
              PROVISIONING_PROFILE_SPECIFIER="$PROFILE_NAME" \
              -archivePath $PWD/build/App.xcarchive \
              clean archive
            xcodebuild -workspace ios/App/App.xcworkspace -scheme App -configuration Release -destination 'generic/platform=iOS' $FLAGS -archivePath $PWD/build/App.xcarchive clean archive
         else
            xcodebuild -project ios/App/App.xcodeproj \
              -scheme App -configuration Release \
              -destination 'generic/platform=iOS' \
              DEVELOPMENT_TEAM="$TEAM_ID" \
              PRODUCT_BUNDLE_IDENTIFIER="$APP_BUNDLE_ID" \
              CODE_SIGN_STYLE=Manual \
              PROVISIONING_PROFILE_SPECIFIER="$PROFILE_NAME" \
              -archivePath $PWD/build/App.xcarchive \
              clean archive
            xcodebuild -project ios/App/App.xcodeproj     -scheme App -configuration Release -destination 'generic/platform=iOS' $FLAGS -archivePath $PWD/build/App.xcarchive clean archive
         fi

     - name: Export IPA (App Store)
        env:
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}
run: |
          cat > ExportOptions.plist <<'EOF'
          cat > ExportOptions.plist <<EOF
         <?xml version="1.0" encoding="UTF-8"?>
         <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
         <plist version="1.0"><dict>
           <key>method</key><string>app-store</string>
           <key>signingStyle</key><string>manual</string>
           <key>provisioningProfiles</key><dict>
              <key>com.mathe.glowup</key><string>${PROFILE_NAME}</string>
              <key>$APP_BUNDLE_ID</key><string>$PROFILE_NAME</string>
           </dict>
           <key>uploadSymbols</key><true/>
           <key>stripSwiftSymbols</key><true/>
           <key>compileBitcode</key><false/>
         </dict></plist>
         EOF
          xcodebuild -exportArchive \
            -archivePath $PWD/build/App.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath $PWD/build
          xcodebuild -exportArchive -archivePath $PWD/build/App.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath $PWD/build

     - name: Upload to TestFlight (Apple ID auth)
env:
